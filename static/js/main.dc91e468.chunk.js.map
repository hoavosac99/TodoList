{"version":3,"sources":["components/TaskForm.js","components/Sort.js","components/Seach.js","components/ConTrol.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","huybo","status","Closed","id","nextProps","tasks","this","className","onClick","action","htmlFor","type","placeholder","aria-describedby","Component","Sort","sortBy","values","onSort","sortValue","checkicon","data-toggle","Seach","onSearch","keyword","Control","TaskItem","onUpdate","task","onDelete","onEdit","index","scope","TaskList","onFilter","filterName","filterStatus","emlTasks","map","key","App","onGenerateData","tasksEditting","disFormAdd","data","generateData","push","localStorage","setItem","JSON","stringify","newtasks","splice","onClose","parseInt","filter","toLowerCase","sort","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","a","b","nameA","toUpperCase","nameB","elmTaskForm","ConTrol","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc91e468.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id:'',\r\n      name: '',\r\n      status: true\r\n    }\r\n   \r\n   \r\n  }\r\n  // Khi nhan props dua task\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.tasks){\r\n      this.setState({\r\n        id: nextProps.tasks.id,\r\n        name: nextProps.tasks.name,\r\n        status : nextProps.tasks.status\r\n      });\r\n    }else if(!nextProps.tasks){\r\n      this.setState({\r\n        id:'',\r\n        name: '',\r\n        status: true\r\n      })\r\n    }\r\n  }\r\n  // static getDerivedStateFromProps(props, state) {\r\n  //   if (props.tasks) {\r\n  //     return {\r\n  //       id: props.tasks.id,\r\n  //       name: props.tasks.name,\r\n  //       status: props.tasks.status\r\n  //     };\r\n  //   }else if(!props.tasks){\r\n  //     return {\r\n  //       id:'',\r\n  //       name:'',\r\n  //       status: true\r\n  //     };\r\n  //   }\r\n\r\n  //   // Return null to indicate no change to state.\r\n  //   return null;\r\n  // }\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (this.props.tasks !== prevProps.tasks) {\r\n  //     this._loadAsyncData(this.props.tasks);\r\n  //   }\r\n  // }\r\n  \r\n    \r\n   \r\n  onChange = (event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    if(name ==='status' && value==='true'){\r\n      value = true;\r\n    }else if(name==='status'&& value==='false'){\r\n      value = false;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n    \r\n  }\r\n  onSubmit = (event)=>{\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n  }\r\n  //xoa noi dung task form\r\n  huybo = ()=>{\r\n      this.setState({\r\n        name: '',\r\n        status: true\r\n      })\r\n  }\r\n  //dong task form\r\n  Closed = ()=>{\r\n    this.props.Closed(false);\r\n  }\r\n    render(){\r\n        var {id}= this.state;\r\n        return (         \r\n            <div>\r\n                  <h3 >{id !==''?'Sua cong viec':'Thêm công việc'}\r\n                    <i className=\"far fa-times-circle\" onClick={this.Closed}></i>\r\n                  </h3>\r\n                  <form action=\"\" onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"\">Tên</label>\r\n                    <input type=\"text\" name=\"name\" className=\"form-control\"\r\n                      value={this.state.name}\r\n                      onChange={this.onChange}\r\n                     placeholder=\"\" aria-describedby=\"helpId\"/>\r\n                    <label htmlFor=\"\">Trạng thái</label> \r\n                      <select className=\"form-control\" name=\"status\" id=\"\"\r\n                      value={this.state.status}\r\n                      onChange={this.onChange}>\r\n                        <option value={true}>Kich hoat</option>\r\n                        <option value={false}>An</option>\r\n                      </select>\r\n                    \r\n                    <button type=\"submit\" className=\"btn btn-primary mr-sm-2\"><i className=\"far fa-save\"></i>Lưu lại</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.huybo}>\r\n                      <i className=\"fas fa-times\"></i>Xóa bỏ\r\n                      </button>\r\n                  </div>\r\n                  </form>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n \r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           sortBy : '',\r\n           sortValue : 1\r\n        }\r\n       \r\n    }\r\n    // componentWillReceiveProps(nextProps){\r\n    //    if(nextProps && nextProps.sortBy && nextProps.sortValue){\r\n    //        this.setState({\r\n    //            sortBy : nextProps.sortBy,\r\n    //            sortValue : nextProps.sortValue\r\n    //        })\r\n    //    }\r\n    // }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.sortBy && state.sortValue) {\r\n          return {\r\n            sortBy: props.sortBy,\r\n            sortValue: props.sortValue\r\n          };\r\n        }\r\n    }\r\n    // onClick = ()=>{\r\n    //     this.props.onSort(\"he\");\r\n    // }\r\n    Sort = (sortBy,values)=>{\r\n        this.props.onSort(sortBy,values)\r\n    }\r\n    \r\n    render(){\r\n        var {sortBy , sortValue} = this.state;\r\n        function checkicon(name,value){\r\n           \r\n                if(sortBy === name && sortValue === value) {\r\n                    return <i className=\"fas fa-check\"></i>;\r\n                    \r\n                }else return '';\r\n        }\r\n        return (\r\n            <div className=\"dropdown\">\r\n            <button type=\"button\" className=\"btn btn-success dropdown-toggle btn--sort\" \r\n                data-toggle=\"dropdown\"\r\n               >\r\n            <i className=\"fas fa-sort-amount-down\"></i>Sắp xếp\r\n            </button>\r\n            <div className=\"dropdown-menu menu-sort\">\r\n                <ul className=\"sort--list\">\r\n                    <li className=\"dropdown-item sort--item\" onClick = {()=>this.Sort('name',1)}>Sắp xếp tên \r\n                        <i className=\"fas fa-sort-alpha-down\"></i>\r\n                        {checkicon('name',1)}\r\n                    </li>\r\n                    <li className=\"dropdown-item sort--item\" onClick = {()=>this.Sort('name',-1)}>Sắp xếp tên\r\n                        <i className=\"fas fa-sort-alpha-down-alt\"></i>\r\n                        {checkicon('name',-1)}\r\n                    </li>\r\n                    <li className=\"dropdown-item sort--item\" onClick = {()=>this.Sort('status',1)}>Trạng thái: Kích hoạt\r\n                         {checkicon('status',1)}\r\n                    </li>\r\n                    <li className=\"dropdown-item sort--item\" onClick = {()=>this.Sort('status',-1)}>Trạng thái: Ẩn\r\n                        {checkicon('status',-1)}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n          </div>\r\n           \r\n          );\r\n        }\r\n    }\r\n \r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Seach extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            keyword: ''\r\n        }\r\n    }\r\n    onChange = (event)=>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onClick = (event)=>{\r\n        event.preventDefault();\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                   <form className=\"form-inline\" action=\"\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\"\r\n                                name='keyword'\r\n                                value={this.state.keyword}\r\n                                onChange = {this.onChange}\r\n                        />\r\n                        <button className=\"btn btn-success\" type=\"submit\" onClick={this.onClick}>\r\n                            <i className=\"fas fa-search-plus\"></i>\r\n                            Tìm kiếm\r\n                        </button>\r\n                    </form>\r\n            </div>\r\n                     \r\n                      \r\n           \r\n          );\r\n        }\r\n    }\r\n \r\n\r\nexport default Seach;\r\n","import React, { Component } from 'react';\r\nimport Sort from './Sort';\r\nimport Seach from './Seach';\r\n\r\n\r\nclass Control extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                  <nav className=\"navbar navbar-expand-sm\">\r\n                       <Seach onSearch={this.props.onSearch}/>\r\n                       <Sort onSort={this.props.onSort}\r\n                             sortBy = {this.props.sortBy}\r\n                             sortValue = {this.props.sortValue}/>\r\n                </nav>\r\n               \r\n            </div>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n \r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItem extends Component {\r\n  //update task\r\n  onUpdate = ()=>{\r\n    this.props.onUpdate(this.props.task.id);\r\n  }\r\n  //xoa task\r\n  onDelete = ()=>{\r\n    this.props.onDelete(this.props.task.id);\r\n  }\r\n  //dua task\r\n  onEdit = ()=>{\r\n    this.props.onEdit(this.props.task.id);\r\n  }\r\n    render(){\r\n      var {task,index} = this.props;\r\n     \r\n        return (\r\n\r\n                <tr>\r\n                  <th scope=\"row\">{index}</th>\r\n                  <td>{task.name}</td>\r\n                  <td onClick = {this.onUpdate}>\r\n                    \r\n                    {task.status?<span className=\"badge badge-danger\">Kich hoat</span>:<span className=\"badge badge-secondary\">An</span>}\r\n                      \r\n                  </td>\r\n                  <td>\r\n                    <button type=\"button\" className=\"btn btn-danger mr-sm-2\" onClick={this.onEdit}>\r\n                    <i className=\"fas fa-pencil-alt\"></i>Sửa</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                    <i className=\"fas fa-trash-alt\"></i>Xóa</button>\r\n                  </td>\r\n                </tr>\r\n        \r\n          );\r\n        }\r\n    }\r\n \r\n\r\nexport default TaskItem;\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName: '',\r\n      filterStatus: 1\r\n    }\r\n  }\r\n  onChange = (event)=>{\r\n      var target = event.target;\r\n      var name = target.name;\r\n      var value = target.value;\r\n      this.props.onFilter(\r\n         name==='filterName'? value: this.state.filterName,\r\n         name==='filterStatus'? value:this.state.filterStatus\r\n      )\r\n      this.setState({\r\n        [name] : value\r\n      })\r\n  }\r\n    render(){\r\n      var {tasks} = this.props;\r\n      var {filterName, filterStatus} = this.state;\r\n      var emlTasks = tasks.map((task,index)=>{\r\n        return <TaskItem key={task.id} \r\n                task={task} index = {index}\r\n                onUpdate = {this.props.onUpdate}\r\n                onDelete = {this.props.onDelete}\r\n                onEdit = {this.props.onEdit}/>\r\n      });\r\n        return (\r\n            <div className=\"TaskList\">\r\n               <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">STT</th>\r\n                  <th scope=\"col\">TÊN</th>\r\n                  <th scope=\"col\">TRẠNG THÁI</th>\r\n                  <th scope=\"col\">HÀNH ĐỘNG</th>\r\n                </tr>\r\n              </thead>\r\n\r\n                <tbody>\r\n                <tr>\r\n                  <td>Tim kiem</td>\r\n                  <td>\r\n                    <input type=\"text\" className=\"form-control\" id=\"\"\r\n                        value={filterName}\r\n                        name=\"filterName\" \r\n                        onChange = {this.onChange}\r\n                        />\r\n                  </td>\r\n                  <td>\r\n                    <select className=\"form-control\" name=\"filterStatus\" id=\"\" onChange = {this.onChange} value={filterStatus}>\r\n                      <option value={1}>Tất cả</option>\r\n                      <option value={2}>Kích hoạt</option>\r\n                      <option value={3}>Ẩn</option>\r\n                    </select>\r\n                  </td>\r\n                 \r\n                </tr>\r\n                {emlTasks}\r\n                \r\n              </tbody>\r\n            </table>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n \r\n\r\nexport default TaskList;\r\n","import React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport ConTrol from './components/ConTrol';\nimport TaskList from './components/TaskList';\nimport { Component } from 'react';\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks:[],\n      tasksEditting: null,\n      filter : {\n        name:'',\n        status: 1\n      },\n      keyword: '',\n      sort: null,\n      sortBy: 'name',\n      sortValue: 1\n    }\n   \n  }\n  componentDidMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks,\n        disFormAdd: false\n\n      })\n    }\n    \n  }\n  onGenerateData = ()=>{\n \n    this.setState({\n      tasksEditting: null,\n      disFormAdd: true\n    });\n    // localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  s4(){\n    return Math.floor((1+Math.random())* 0x10000).toString(16).substring(1);\n\n  }\n  generateData(){\n    return this.s4() +'-'+ this.s4() + '-' + this.s4()  +'-' + this.s4() + '-'\n    +this.s4 + '-' + this.s4()  +'-' + this.s4();\n  }\n  //funticon thay doi addTask\n  onSubmit = (data)=>{\n   var {tasks} = this.state;\n   if(data.id ===''){\n    data.id = this.generateData();\n    tasks.push(data);\n   }else{\n     //Edit\n     tasks = tasks.map((task)=>{\n        if(task.id===data.id){\n          task = data;\n        }\n        return task;\n     });\n   \n   }\n   \n   this.setState({\n     tasks: tasks,\n     tasksEditting: null\n   });\n   localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  //update status\n  onUpdate = (id)=>{\n    const {tasks} = this.state;\n    const newtasks = tasks.map((task)=>{\n      if(task.id===id){\n        task.status = !task.status;\n      }\n      return task;\n    });\n    this.setState({\n      tasks: newtasks,\n    })\n    localStorage.setItem('tasks',JSON.stringify(newtasks));\n  }\n  // xoa task\n  onDelete = (id)=>{\n    const {tasks} = this.state;\n    tasks.splice(id,1);\n    this.setState({\n      tasks: tasks\n    })\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  // sua task\n  onEdit = (id)=>{\n    this.setState({\n      disFormAdd: false\n    })\n    const {tasks} = this.state;\n    const newtasks = tasks.map((task)=>{\n      if(task.id===id){\n        this.setState({\n          disFormAdd: true,\n          tasksEditting: task\n        });\n       \n      }\n      return task;\n    });\n    this.setState({\n      tasks: newtasks\n    })\n    localStorage.setItem('tasks',JSON.stringify(newtasks));\n  }\n  //Close TaskForm\n  onClose = ()=> {\n    this.setState({\n      disFormAdd: false\n    });\n  }\n  //filter\n  onFilter = (name,status)=>{\n    status = parseInt(status, 10);\n    this.setState({\n      filter:{\n        name : name.toLowerCase(),\n        status: status\n      }\n    })\n  }\n  // tim kiem bang o search\n  onSearch = (keyword)=>{\n    this.setState({\n      keyword: keyword\n    })\n  }\n  //Sort task\n  onSort = (sortBy,values)=>{\n    this.setState({\n      sortBy: sortBy,\n      sortValue: values\n    })\n  }\n  render(){\n    var {tasks,disFormAdd, tasksEditting ,filter, keyword, sortBy,sortValue} = this.state;\n    if(filter){\n      if(filter.name){\n        tasks = tasks.filter((task)=>{\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n        tasks = tasks.filter((task)=>{\n          if(filter.status===1){\n            return task;\n          }\n          else{\n            return task.status===(filter.status=== 2? true:false);\n          }\n        })\n    }\n    if(keyword){\n      tasks = tasks.filter((task)=>{\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n     \n    }\n    // sap xep theo name va status\n    if(sortBy==='name'){\n      if(sortValue===1){\n        tasks.sort(function(a, b) {\n          var nameA = a.name.toUpperCase(); // bỏ qua hoa thường\n          var nameB = b.name.toUpperCase(); // bỏ qua hoa thường\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n        \n          // name trùng nhau\n          return 0;\n        });\n      }else{\n        tasks.sort(function(a, b) {\n          var nameA = a.name.toUpperCase(); // bỏ qua hoa thường\n          var nameB = b.name.toUpperCase(); // bỏ qua hoa thường\n          if (nameA < nameB) {\n            return 1;\n          }\n          if (nameA > nameB) {\n            return -1;\n          }\n        \n          // name trùng nhau\n          return 0;\n        });\n      }\n      \n      \n    }else if(sortBy==='status'){\n        //sap xep theo status\n        if(sortValue===1){\n          tasks.sort(function(a, b) {\n            var nameA = a.status;\n            var nameB = b.status;\n            if (nameA < nameB) {\n              return 1;\n            }\n            if (nameA > nameB) {\n              return -1;\n            }\n          \n            // name trùng nhau\n            return 0;\n          });\n        }\n        else{\n          tasks.sort(function(a, b) {\n            var nameA = a.status; \n            var nameB = b.status; \n            if (nameA < nameB) {\n              return -1;\n            }\n            if (nameA > nameB) {\n              return 1;\n            }\n          \n            // name trùng nhau\n            return 0;\n          });\n        }\n       \n    }\n    \n    var elmTaskForm = disFormAdd?<TaskForm onSubmit = {this.onSubmit}\n          tasks={tasksEditting}\n          Closed = {this.onClose}\n          />:'';\n    return(\n      <div className=\"container\">\n      <h1 >Quản lý công việc</h1>\n      <div className=\"row\">\n        <div className={disFormAdd?\"col-xl-4\":\"\"}>\n          {elmTaskForm}\n        </div>\n        <div className={disFormAdd?\"col-xl-8\":\"col-xl-12\"}>\n          <div className=\"row\">\n            <button onClick={this.onGenerateData} type=\"button\" className=\"btn btn-primary\"><i className=\"fas fa-plus\"></i> Thêm công việc</button>\n          </div>\n          <div className=\"row\">\n            <ConTrol onSearch= {this.onSearch} onSort={this.onSort}\n                      sortBy = {this.state.sortBy}\n                      sortValue = {this.state.sortValue}\n            />\n          </div>\n          <div className=\"row\">\n            <TaskList tasks= {tasks} \n            onUpdate = {this.onUpdate} \n            onDelete= {this.onDelete} \n            onEdit={this.onEdit}\n            onFilter= {this.onFilter}\n            />\n          </div>\n\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}